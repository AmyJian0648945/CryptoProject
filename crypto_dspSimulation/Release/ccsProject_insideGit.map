******************************************************************************
               TMS320C6x Linker PC v7.3.1                      
******************************************************************************
>> Linked Fri Apr 28 19:12:06 2017

OUTPUT FILE NAME:   <ccsProject_insideGit.out>
ENTRY POINT SYMBOL: "_c_int00"  address: 8000bf40


MEMORY CONFIGURATION

         name            origin    length      used     unused   attr    fill
----------------------  --------  ---------  --------  --------  ----  --------
  DSPL2ROM              00700000   00010000  00000000  00010000  RWIX
  DSPL2RAM              00800000   00040000  00000000  00040000  RWIX
  DSPL1PRAM             00e00000   00008000  00000000  00008000  RWIX
  DSPL1DRAM             00f00000   00008000  00000000  00008000  RWIX
  SHDSPL2ROM            11700000   00010000  00000000  00010000  RWIX
  SHDSPL2RAM            11800000   00040000  00000000  00040000  RWIX
  SHDSPL1PRAM           11e00000   00008000  00000000  00008000  RWIX
  SHDSPL1DRAM           11f00000   00008000  00000000  00008000  RWIX
  EMIFACS0              40000000   20000000  00000000  20000000  RWIX
  EMIFACS2              60000000   02000000  00000000  02000000  RWIX
  EMIFACS3              62000000   02000000  00000000  02000000  RWIX
  EMIFACS4              64000000   02000000  00000000  02000000  RWIX
  EMIFACS5              66000000   02000000  00000000  02000000  RWIX
  SHRAM                 80000000   00020000  00015e40  0000a1c0  RWIX
  DDR2                  c0000000   20000000  00000000  20000000  RWIX


SECTION ALLOCATION MAP

 output                                  attributes/
section   page    origin      length       input sections
--------  ----  ----------  ----------   ----------------
.pinit     0    80000000    00000000     UNINITIALIZED

.text      0    80000000    0000c640     
                  80000000    000010e0     aes.obj (.text)
                  800010e0    00000ee0     modFunctions32.obj (.text)
                  80001fc0    00000860     modularInverse32.obj (.text)
                  80002820    00000820     sha2.obj (.text)
                  80003040    00000800     helpfulFunctions.obj (.text)
                  80003840    000006c0     additionalFunctions32.obj (.text)
                  80003f00    000005e0     montExponentiation32.obj (.text)
                  800044e0    000005a0     rts6740.lib : divd.obj (.text:__divd)
                  80004a80    000005a0     signatureMessage.obj (.text)
                  80005020    00000580     rts6740.lib : _printfi.obj (.text:__getarg_diouxp)
                  800055a0    00000560     keyEstablishmentFunctions32.obj (.text)
                  80005b00    000004a0     PRNG.obj (.text)
                  80005fa0    00000480     rts6740.lib : _printfi.obj (.text:__setfield)
                  80006420    00000480     verifySignature.obj (.text)
                  800068a0    00000440     rts6740.lib : _printfi.obj (.text:__printfi)
                  80006ce0    00000400     encryptDecrypt.obj (.text)
                  800070e0    000003e0     main.obj (.text)
                  800074c0    00000380     useAES.obj (.text)
                  80007840    00000300     rts6740.lib : fputs.obj (.text:_fputs)
                  80007b40    000002c0                 : _printfi.obj (.text:__pproc_fge)
                  80007e00    000002c0                 : _printfi.obj (.text:__pproc_fwp)
                  800080c0    000002a0                 : _printfi.obj (.text:_ecvt)
                  80008360    000002a0                 : _printfi.obj (.text:_fcvt)
                  80008600    00000280                 : memory.obj (.text:_free)
                  80008880    00000260                 : imath64.obj (.text:__divull)
                  80008ae0    00000260                 : _printfi.obj (.text:__pconv_e)
                  80008d40    00000240                 : _printfi.obj (.text:__pproc_diouxp)
                  80008f80    00000220                 : _printfi.obj (.text:__pproc_str)
                  800091a0    00000200                 : _printfi.obj (.text:__pconv_g)
                  800093a0    000001c0                 : _printfi.obj (.text:__mcpy)
                  80009560    000001c0     useSHA256.obj (.text)
                  80009720    000001a0     rts6740.lib : imath40.obj (.text:__divul)
                  800098c0    00000180                 : trgdrv.obj (.text:_HOSTrename)
                  80009a40    00000180                 : memory.obj (.text:_malloc)
                  80009bc0    00000180                 : setvbuf.obj (.text:_setvbuf)
                  80009d40    00000180     hmac.obj (.text)
                  80009ec0    00000180     maskGenerationFunction.obj (.text)
                  8000a040    00000140     rts6740.lib : _printfi.obj (.text:__pproc_fflags)
                  8000a180    00000140                 : fputc.obj (.text:_fputc)
                  8000a2c0    00000140                 : lowlev.obj (.text:_getdevice)
                  8000a400    00000120                 : fclose.obj (.text:_fclose)
                  8000a520    00000100                 : trgdrv.obj (.text:_HOSTlseek)
                  8000a620    00000100                 : autoinit.obj (.text:__auto_init)
                  8000a720    00000100                 : _printfi.obj (.text:__ltostr)
                  8000a820    00000100                 : _io_perm.obj (.text:__wrt_ok)
                  8000a920    00000100                 : fflush.obj (.text:_fflush)
                  8000aa20    000000e0                 : trgdrv.obj (.text:_HOSTopen)
                  8000ab00    000000e0                 : atoi.obj (.text:_atoi)
                  8000abe0    000000e0                 : lowlev.obj (.text:_close)
                  8000acc0    000000e0                 : exit.obj (.text:_exit)
                  8000ada0    000000e0                 : memset.obj (.text:_memset)
                  8000ae80    000000c0                 : trgdrv.obj (.text:_HOSTread)
                  8000af40    000000c0                 : trgdrv.obj (.text:_HOSTunlink)
                  8000b000    000000c0                 : trgdrv.obj (.text:_HOSTwrite)
                  8000b0c0    000000c0                 : fopen.obj (.text:__cleanup)
                  8000b180    000000c0                 : _printfi.obj (.text:__div)
                  8000b240    000000c0                 : divu.obj (.text:__divu)
                  8000b300    000000c0                 : fflush.obj (.text:__doflush)
                  8000b3c0    000000c0                 : fseek.obj (.text:_fseek)
                  8000b480    000000c0                 : lowlev.obj (.text:_lseek)
                  8000b540    000000c0                 : ltoa.obj (.text:_ltoa)
                  8000b600    000000c0                 : lowlev.obj (.text:_write)
                  8000b6c0    000000a0                 : trgdrv.obj (.text:_HOSTclose)
                  8000b760    000000a0                 : trgdrv.obj (.text:_HOSTtime)
                  8000b800    000000a0                 : imath40.obj (.text:__divli)
                  8000b8a0    000000a0                 : _printfi.obj (.text:__ecpy)
                  8000b940    000000a0                 : _printfi.obj (.text:__fcpy)
                  8000b9e0    000000a0                 : fixdli.obj (.text:__fixdli)
                  8000ba80    000000a0                 : _printfi.obj (.text:__pconv_f)
                  8000bb20    000000a0                 : cpy_tbl.obj (.text:_copy_in)
                  8000bbc0    000000a0                 : lowlev.obj (.text:_finddevice)
                  8000bc60    000000a0                 : memcpy64.obj (.text:_memcpy)
                  8000bd00    000000a0                 : memory.obj (.text:_minsert)
                  8000bda0    000000a0                 : memory.obj (.text:_mremove)
                  8000be40    00000080                 : fltlid.obj (.text:__fltlid)
                  8000bec0    00000080                 : llshift.obj (.text:__llshl)
                  8000bf40    00000080                 : boot.obj (.text:_c_int00)
                  8000bfc0    00000080                 : fprintf.obj (.text:_fprintf)
                  8000c040    00000080                 : printf.obj (.text:_printf)
                  8000c0c0    00000080                 : trgmsg.obj (.text:_readmsg)
                  8000c140    00000080                 : lowlev.obj (.text:_unlink)
                  8000c1c0    00000060                 : assert.obj (.text:__abort_msg)
                  8000c220    00000060                 : imath64.obj (.text:__subcull)
                  8000c280    00000060                 : memccpy.obj (.text:_memccpy)
                  8000c2e0    00000060                 : trgmsg.obj (.text:_writemsg)
                  8000c340    00000040                 : isinf.obj (.text:___isinf)
                  8000c380    00000040                 : _printfi.obj (.text:___isnan)
                  8000c3c0    00000040                 : args_main.obj (.text:__args_main)
                  8000c400    00000040                 : frcmpyd_div.obj (.text:__frcmpyd_div)
                  8000c440    00000040                 : llshift.obj (.text:__llshru)
                  8000c480    00000040                 : imath40.obj (.text:__remli)
                  8000c4c0    00000040                 : strasg.obj (.text:__strasgi_64plus)
                  8000c500    00000040                 : time.obj (.text:_time)
                  8000c540    00000020                 : negll.obj (.text:__negll)
                  8000c560    00000020                 : _lock.obj (.text:__nop)
                  8000c580    00000020                 : fprintf.obj (.text:__outc)
                  8000c5a0    00000020                 : printf.obj (.text:__outc)
                  8000c5c0    00000020                 : fprintf.obj (.text:__outs)
                  8000c5e0    00000020                 : printf.obj (.text:__outs)
                  8000c600    00000020                 : exit.obj (.text:_abort)
                  8000c620    00000020                 : remove.obj (.text:_remove)

.bss       0    80000000    00000000     UNINITIALIZED

.data      0    80000000    00000000     UNINITIALIZED

.sysmem    0    8000c640    00004000     UNINITIALIZED
                  8000c640    00000008     rts6740.lib : memory.obj (.sysmem)
                  8000c648    00003ff8     --HOLE--

.const     0    80010640    00003028     
                  80010640    00000400     aes.obj (.const:_Td0)
                  80010a40    00000400     aes.obj (.const:_Td1)
                  80010e40    00000400     aes.obj (.const:_Td2)
                  80011240    00000400     aes.obj (.const:_Td3)
                  80011640    00000400     aes.obj (.const:_Td4)
                  80011a40    00000400     aes.obj (.const:_Te0)
                  80011e40    00000400     aes.obj (.const:_Te1)
                  80012240    00000400     aes.obj (.const:_Te2)
                  80012640    00000400     aes.obj (.const:_Te3)
                  80012a40    00000400     aes.obj (.const:_Te4)
                  80012e40    000001f4     main.obj (.const:_$P$T8$9)
                  80013034    00000003     rts6740.lib : assert.obj (.const)
                  80013037    00000001     --HOLE-- [fill = 0]
                  80013038    00000101                 : ctype.obj (.const:__ctypes_)
                  80013139    00000002                 : fputs.obj (.const)
                  8001313b    00000005     --HOLE-- [fill = 0]
                  80013140    00000100     sha2.obj (.const:_K256)
                  80013240    00000080     main.obj (.const:_$P$T3$4)
                  800132c0    00000080     main.obj (.const:_$P$T4$5)
                  80013340    00000080     main.obj (.const:_$P$T5$6)
                  800133c0    00000080     main.obj (.const:_$P$T7$8)
                  80013440    0000006a     sha2.obj (.const)
                  800134aa    00000006     --HOLE-- [fill = 0]
                  800134b0    00000040     PRNG.obj (.const:_$P$T0$2)
                  800134f0    00000040     main.obj (.const:_$P$T1$2)
                  80013530    0000003e     helpfulFunctions.obj (.const)
                  8001356e    00000002     --HOLE-- [fill = 0]
                  80013570    0000003c     main.obj (.const:_$P$T0$1)
                  800135ac    00000039     additionalFunctions32.obj (.const)
                  800135e5    00000003     --HOLE-- [fill = 0]
                  800135e8    00000028     aes.obj (.const:_rcon)
                  80013610    00000023     rts6740.lib : _printfi.obj (.const)
                  80013633    00000005     --HOLE-- [fill = 0]
                  80013638    00000020     sha2.obj (.const:_sha256_initial_hash_value)
                  80013658    00000008     main.obj (.const:_$P$T2$3)
                  80013660    00000008     main.obj (.const:_$P$T6$7)

.stack     0    80013668    00002000     UNINITIALIZED
                  80013668    00000008     rts6740.lib : boot.obj (.stack)
                  80013670    00001ff8     --HOLE--

.far       0    80015668    00000554     UNINITIALIZED
                  80015668    00000324     rts6740.lib : defs.obj (.far)
                  8001598c    00000004                 : fopen.obj (.far)
                  80015990    0000011c                 : lowlev.obj (.far)
                  80015aac    00000004     --HOLE--
                  80015ab0    000000d0                 : trgdrv.obj (.far)
                  80015b80    00000020     PRNG.obj (.far)
                  80015ba0    0000000c     rts6740.lib : exit.obj (.far)
                  80015bac    00000008                 : _lock.obj (.far)
                  80015bb4    00000008                 : memory.obj (.far)

.cinit     0    80015bc0    00000164     
                  80015bc0    0000005c     rts6740.lib : defs.obj (.cinit)
                  80015c1c    00000004     --HOLE-- [fill = 0]
                  80015c20    0000005c                 : lowlev.obj (.cinit)
                  80015c7c    00000004     --HOLE-- [fill = 0]
                  80015c80    0000002c                 : exit.obj (.cinit)
                  80015cac    00000004     --HOLE-- [fill = 0]
                  80015cb0    0000002c                 : memory.obj (.cinit)
                  80015cdc    00000004     --HOLE-- [fill = 0]
                  80015ce0    0000001c                 : _lock.obj (.cinit)
                  80015cfc    00000004     --HOLE-- [fill = 0]
                  80015d00    0000000c                 : fopen.obj (.cinit)
                  80015d0c    00000004     --HOLE-- [fill = 0]
                  80015d10    00000009     PRNG.obj (.cinit)
                  80015d19    00000007     --HOLE-- [fill = 0]
                  80015d20    00000004     (.pad.cinit) [fill = 0]

.cio       0    80015d24    00000120     UNINITIALIZED
                  80015d24    00000120     rts6740.lib : trgmsg.obj (.cio)


GLOBAL SYMBOLS: SORTED ALPHABETICALLY BY Name 

address    name
--------   ----
80000000   $bss
80000000   .bss
80000000   .data
80000000   .text
8000c600   C$$EXIT
8000c338   C$$IO$$
8000b6c0   _HOSTclose
8000a520   _HOSTlseek
8000aa20   _HOSTopen
8000ae80   _HOSTread
800098c0   _HOSTrename
8000b760   _HOSTtime
8000af40   _HOSTunlink
8000b000   _HOSTwrite
80005eb8   _PRNG
80005b54   _RNG
80002d90   _SHA256_Final
80002d24   _SHA256_Init
80002820   _SHA256_Transform
80002aec   _SHA256_Update
800037b4   _XOR
80015d24   __CIOBUF_
80015668   __STACK_END
00002000   __STACK_SIZE
00004000   __SYSMEM_SIZE
00000001   __TI_args_main
80015ba8   ___TI_enable_exit_profile_output
ffffffff   ___TI_pprof_out_hndl
ffffffff   ___TI_prof_data_size
ffffffff   ___TI_prof_data_start
ffffffff   ___binit__
80000000   ___bss__
ffffffff   ___c_args__
80015bc0   ___cinit__
80000000   ___data__
80000000   ___edata__
80000000   ___end__
8000c640   ___etext__
8000c340   ___isinf
ffffffff   ___pinit__
80000000   ___text__
8000c1c0   __abort_msg
8000c3c0   __args_main
8000a620   __auto_init
8000b240   __c6xabi_divu
8000c4c0   __c6xabi_strasgi_64plus
8000b0c0   __cleanup
80015ba0   __cleanup_ptr
80013038   __ctypes_
800044e0   __divd
8000b800   __divli
8000b240   __divu
80009720   __divul
80008880   __divull
8000b300   __doflush
80015ba4   __dtors_ptr
8000b9e0   __fixdli
8000be40   __fltlid
8000c400   __frcmpyd_div
80015988   __ft_end
80015668   __ftable
8000bec0   __llshl
8000c440   __llshru
80015bac   __lock
8000c540   __negll
8000c560   __nop
800068a0   __printfi
8000c480   __remli
80013668   __stack
8000c4c0   __strasgi_64plus
8000c220   __subcull
8000c640   __sys_memory
80015848   __tmpnams
80015bb0   __unlock
8000a820   __wrt_ok
8000c600   _abort
80003e04   _addition
80007780   _aesCBCdecrypt
800076b8   _aesCBCencrypt
8000758c   _aesDecrypt
800074c0   _aesEncrypt
80000c2c   _aes_decrypt
80000790   _aes_encrypt
800004ec   _aes_set_decrypt_key
80000000   _aes_set_encrypt_key
8000ab00   _atoi
8000bf40   _c_int00
80005a68   _calculateKey
8000abe0   _close
80005d58   _compareFSR
80005a40   _computePartOfKey
80003754   _concat
800036f0   _copyArray
80003da4   _copyArray32
80003d30   _copyArray8
8000368c   _copyArrayFrom0
8000bb20   _copy_in
800059b0   _createExponent
80005944   _createMessage
80007014   _decrypt
800058ac   _decryptAndUnsignMessage
80006f18   _decryptHMAC
80003d0c   _divideBy16
80003cd0   _divideByTwo
80006e18   _encrypt
80006ce0   _encryptHMAC
8000acc0   _exit
8000a400   _fclose
8000a920   _fflush
80005cd8   _findRandNum
80003c58   _flipArray
8000bfc0   _fprintf
8000a180   _fputc
80007840   _fputs
80008600   _free
80001180   _from2to32
80005680   _from32to8
800055a0   _from8to32
8000b3c0   _fseek
80009634   _hashOfLength
800095a8   _hashWithTime
80003570   _hexToString
80009d40   _hmac
80003be4   _isBiggerThan
8000386c   _isBiggerThanOrEqual
8000b480   _lseek
8000b540   _ltoa
800070e0   _main
80009a40   _malloc
80009ec0   _maskGenerationFunction
8000c280   _memccpy
8000bc60   _memcpy
8000ada0   _memset
80001e34   _mod
80001a84   _modFaster
80001d84   _modMult
80001c64   _modSquare
80002060   _modularInverse
80004164   _montExp
80003f00   _montMultiplication
800017e4   _multiplication
80003ba0   _multiplyByTwo
80003b40   _numberIsZero
80007634   _padding
800010e0   _positionMSB
800033c0   _printArray
80003aac   _printArray32
80003a18   _printArray8
80003330   _printArrayNoSpaces
80003180   _printChar
800030f0   _printCharNoSpaces
8000c040   _printf
8000a180   _putc
8000c0c0   _readmsg
8000c620   _remove
800057e0   _repositionZeros
80003060   _seeTheDifference
80009bc0   _setvbuf
80005748   _signAndEncryptMessage
80004a80   _signatureMessage
80001fc0   _signedSubtraction
800075c8   _simpleDecrypt
800074f8   _simpleEncrypt
80009560   _simpleHashWithLength
80001550   _squareProduct
800038ec   _subtraction
800039c8   _subtractionWithSign
8000c500   _time
80003040   _timeData
8000c140   _unlink
80005b00   _updateFSR
80006420   _verifySignature
8000b600   _write
8000c2e0   _writemsg
80003854   _zerosArray
80003840   _zerosArray16
ffffffff   binit
80015bc0   cinit
80000000   edata
80000000   end
8000c640   etext
ffffffff   pinit


GLOBAL SYMBOLS: SORTED BY Symbol Address 

address    name
--------   ----
00000001   __TI_args_main
00002000   __STACK_SIZE
00004000   __SYSMEM_SIZE
80000000   $bss
80000000   .bss
80000000   .data
80000000   .text
80000000   ___bss__
80000000   ___data__
80000000   ___edata__
80000000   ___end__
80000000   ___text__
80000000   _aes_set_encrypt_key
80000000   edata
80000000   end
800004ec   _aes_set_decrypt_key
80000790   _aes_encrypt
80000c2c   _aes_decrypt
800010e0   _positionMSB
80001180   _from2to32
80001550   _squareProduct
800017e4   _multiplication
80001a84   _modFaster
80001c64   _modSquare
80001d84   _modMult
80001e34   _mod
80001fc0   _signedSubtraction
80002060   _modularInverse
80002820   _SHA256_Transform
80002aec   _SHA256_Update
80002d24   _SHA256_Init
80002d90   _SHA256_Final
80003040   _timeData
80003060   _seeTheDifference
800030f0   _printCharNoSpaces
80003180   _printChar
80003330   _printArrayNoSpaces
800033c0   _printArray
80003570   _hexToString
8000368c   _copyArrayFrom0
800036f0   _copyArray
80003754   _concat
800037b4   _XOR
80003840   _zerosArray16
80003854   _zerosArray
8000386c   _isBiggerThanOrEqual
800038ec   _subtraction
800039c8   _subtractionWithSign
80003a18   _printArray8
80003aac   _printArray32
80003b40   _numberIsZero
80003ba0   _multiplyByTwo
80003be4   _isBiggerThan
80003c58   _flipArray
80003cd0   _divideByTwo
80003d0c   _divideBy16
80003d30   _copyArray8
80003da4   _copyArray32
80003e04   _addition
80003f00   _montMultiplication
80004164   _montExp
800044e0   __divd
80004a80   _signatureMessage
800055a0   _from8to32
80005680   _from32to8
80005748   _signAndEncryptMessage
800057e0   _repositionZeros
800058ac   _decryptAndUnsignMessage
80005944   _createMessage
800059b0   _createExponent
80005a40   _computePartOfKey
80005a68   _calculateKey
80005b00   _updateFSR
80005b54   _RNG
80005cd8   _findRandNum
80005d58   _compareFSR
80005eb8   _PRNG
80006420   _verifySignature
800068a0   __printfi
80006ce0   _encryptHMAC
80006e18   _encrypt
80006f18   _decryptHMAC
80007014   _decrypt
800070e0   _main
800074c0   _aesEncrypt
800074f8   _simpleEncrypt
8000758c   _aesDecrypt
800075c8   _simpleDecrypt
80007634   _padding
800076b8   _aesCBCencrypt
80007780   _aesCBCdecrypt
80007840   _fputs
80008600   _free
80008880   __divull
80009560   _simpleHashWithLength
800095a8   _hashWithTime
80009634   _hashOfLength
80009720   __divul
800098c0   _HOSTrename
80009a40   _malloc
80009bc0   _setvbuf
80009d40   _hmac
80009ec0   _maskGenerationFunction
8000a180   _fputc
8000a180   _putc
8000a400   _fclose
8000a520   _HOSTlseek
8000a620   __auto_init
8000a820   __wrt_ok
8000a920   _fflush
8000aa20   _HOSTopen
8000ab00   _atoi
8000abe0   _close
8000acc0   _exit
8000ada0   _memset
8000ae80   _HOSTread
8000af40   _HOSTunlink
8000b000   _HOSTwrite
8000b0c0   __cleanup
8000b240   __c6xabi_divu
8000b240   __divu
8000b300   __doflush
8000b3c0   _fseek
8000b480   _lseek
8000b540   _ltoa
8000b600   _write
8000b6c0   _HOSTclose
8000b760   _HOSTtime
8000b800   __divli
8000b9e0   __fixdli
8000bb20   _copy_in
8000bc60   _memcpy
8000be40   __fltlid
8000bec0   __llshl
8000bf40   _c_int00
8000bfc0   _fprintf
8000c040   _printf
8000c0c0   _readmsg
8000c140   _unlink
8000c1c0   __abort_msg
8000c220   __subcull
8000c280   _memccpy
8000c2e0   _writemsg
8000c338   C$$IO$$
8000c340   ___isinf
8000c3c0   __args_main
8000c400   __frcmpyd_div
8000c440   __llshru
8000c480   __remli
8000c4c0   __c6xabi_strasgi_64plus
8000c4c0   __strasgi_64plus
8000c500   _time
8000c540   __negll
8000c560   __nop
8000c600   C$$EXIT
8000c600   _abort
8000c620   _remove
8000c640   ___etext__
8000c640   __sys_memory
8000c640   etext
80013038   __ctypes_
80013668   __stack
80015668   __STACK_END
80015668   __ftable
80015848   __tmpnams
80015988   __ft_end
80015ba0   __cleanup_ptr
80015ba4   __dtors_ptr
80015ba8   ___TI_enable_exit_profile_output
80015bac   __lock
80015bb0   __unlock
80015bc0   ___cinit__
80015bc0   cinit
80015d24   __CIOBUF_
ffffffff   ___TI_pprof_out_hndl
ffffffff   ___TI_prof_data_size
ffffffff   ___TI_prof_data_start
ffffffff   ___binit__
ffffffff   ___c_args__
ffffffff   ___pinit__
ffffffff   binit
ffffffff   pinit

[182 symbols]
